# Need samtools and bowtie2 in path to work.
# Execute with command: snakemake -s bowtie2 ../data/intermediate/4_mapped.bam

import re
configfile: "config.json"


def mapping_bowtie2_command():
    if len(config["input"]["reads"])==2:
        return " -1 "+config["input"]["reads"][0]+" -2 "+config["input"]["reads"][1]+" "
    elif len(config["input"]["reads"])==1:
        return " -U "+config["input"]["reads"][0]+" "
    else:
        raise(Exception("Reads should be paired or single ended."))

# path to index file without extension (removed .fa or .fasta)
index_basename="../data/intermediate/index/"+re.split('/|\.',config["input"]["reference"])[-2]

rule bowtie2_index:
    input:
        config["input"]["reference"]
    output:
        expand(index_basename+".{index}.bt2", index=range(1,5)),
        expand(index_basename+".rev.{index}.bt2", index=range(1,3))
    log:
        "logs/bowtie2_index.log"
    run:
        shell("bowtie2-build {input} "+index_basename+" > {log}")

rule bowtie2_map:
    input:
        # Indexed files
        expand(index_basename+".{index}.bt2", index=range(1,5)),
        expand(index_basename+".rev.{index}.bt2", index=range(1,3)),
        # Read files
        config["input"]["reads"]
    output:
        "../data/intermediate/4_mapped.bam"
    threads:
        config["bowtie2"]["threads"]
    log:
        "logs/bowtie2_map.log"
    run:
        shell("bowtie2 \
        -x "+index_basename+" \
        "+mapping_bowtie2_command()+"\
        -p {threads} \
        2> {log} \
        | samtools view -bS - > {output}")
